https://charbelnemnom.com/automate-backup-for-azure-vms-using-powershell-for-azure-backup/https://arindamhazra.com/azure-virtual-machine-backup-report/
http://vcloud-lab.com/entries/microsoft-azure/get-azure-virtual-machine-backup-reports-using-powershell
https://thesystemcenterblog.wordpress.com/2020/02/29/guide-azure-backup-backing-up-an-azure-vm-with-azure-portal-azure-powershell/
https://arindamhazra.com/azure-virtual-machine-backup-report/
https://www.powershellgallery.com/packages/Get-AzVMBackupReport/1.0.0/Content/Get-AzVMBackupReport.ps1
https://stackoverflow.com/questions/50023286/how-to-check-if-back-up-is-enabled-on-azure-virtual-machine-using-powershell
https://techcommunity.microsoft.com/t5/azure-storage-blog/how-to-automate-on-demand-azure-backup-for-azure-virtual/ba-p/3691045
https://azurebiztalkread.wordpress.com/2017/12/11/backup-azure-vm-powershell-azure-portal/
https://www.ntweekly.com/2020/03/28/backup-azure-virtual-machines-with-azure-automation/
https://www.andyroberts.nz/posts/azure-backup/ ------------ usefull
https://www.powershellbros.com/clear-resources-in-azure-subscription/
https://thesystemcenterblog.wordpress.com/2020/02/29/guide-azure-backup-backing-up-an-azure-vm-with-azure-portal-azure-powershell/
http://vcloud-lab.com/files/documents/1aeca2b7-140b-4918-803f-b1305d3ca2b7.ps1
https://buildwindows.wordpress.com/tag/azure-backup/
https://www.cloudcompute.info/setup-virtual-machine-backup-in-azure-devops-pipeline-using-powershell/

https://thesystemcenterblog.wordpress.com/2020/03/04/deep-dive-into-the-azure-backup-explorer/

---------------------------------------------------------------------------------------------------------------------
Connect-AzAccount
Set-AzContext -Subscription sub-jda-cld-solutions-01

$master= Import-Csv -path "C:\Users\1028218\Desktop\Rajesh\Book3.csv"

foreach ($data in $master)
{
$resourceGroups = $data.RESOURCEGROUP    
$Vault = $data.VaultName
$vaultRG = $data.VaultRG
$Policy =$data.Policy
$locations = $data.LOCATION
$vmname = $data.NAME

$target = Get-AzRecoveryServicesVault -ResourceGroupName $vaultRG -Name $Vault
Set-AzRecoveryServicesVaultContext -Vault $target -ErrorAction Stop

        $Pol = Get-AzRecoveryServicesBackupProtectionPolicy -Name $Policy
        Enable-AzRecoveryServicesBackupProtection -Policy $pol -Name $vmname -ResourceGroupName $resourceGroups -ErrorAction Stop
        #Triggering a Backup
        Write-Host "Fetching the Recovery Services Backup Container"
        $namedContainer = Get-AzRecoveryServicesBackupContainer -ContainerType "AzureVM" -Status "Registered" -FriendlyName $vmname
        Write-Host "Fetching the Recovery Services Backup Item"
        $item = Get-AzRecoveryServicesBackupItem -Container $namedContainer -WorkloadType "AzureVM"
        Write-Host "Triggering a Backup on the VMName $vmname" -ForegroundColor Green
        $job = Backup-AzRecoveryServicesBackupItem -Item $item
}
---------------------------------------------------------------------------------------------------------

#Author - Manu Philip
#Setup Virtual machine Backup in Azure DevOps pipeline using PowerShell
#Variables
$RG = 'TF' #Resource Group Name
$Location = 'eastus'
$RSVault = 'Vault1'
$Redundancy = 'LocallyRedundant' #Storage Redundancy settings - LocallyRedundant/GeoRedundant
$Time = '5:00' #Preferred Time to start Backup
$Duration = '365' #Duration of Backup
$PolicyName = 'BackupPolicy'
$VMName = 'azbackuptest'
$BackupName = 'azbackuptest-backup'
$WorkLoadType = "AzureVM"

#PowerShell Code
Write-Host "Registering the Azure Recovery Service provider in the subscription" 
try {
    Register-AzResourceProvider -ProviderNamespace "Microsoft.RecoveryServices" -ErrorAction SilentlyContinue
	}
catch {
    $message = $_
    Write-Warning "An error occured! $message"
}
Write-Host "Creating Azure Recovery Service Vault and setting Vault context, Redundancy settings"
Get-AzRecoveryServicesVault -ResourceGroupName $RG -Name $RSVault -ErrorVariable notPresent -ErrorAction SilentlyContinue
if ($notPresent)
    {
    New-AzRecoveryServicesVault -ResourceGroupName $RG -Name $RSVault -Location $Location
    Get-AzRecoveryServicesVault -Name $RSVault | Set-AzRecoveryServicesVaultContext
    }
else
    {
   Write-Host "Azure Recovery Service Vault $RSVault already exists. Skipping the Vault creation.."
    }
$vault = Get-AzRecoveryServicesVault -ResourceGroupName $RG -Name $RSVault
Get-AzRecoveryServicesVault -Name $RSVault | Set-AzRecoveryServicesBackupProperty -BackupStorageRedundancy $Redundancy
Write-Host "Checking for a valid Backup Policy"
Get-AzRecoveryServicesBackupProtectionPolicy -Name $PolicyName -ErrorVariable notPresent -ErrorAction SilentlyContinue
if ($notPresent)
    {
    $SchdulePol = Get-AzRecoveryServicesBackupSchedulePolicyObject -WorkloadType $WorkLoadType 
    $SchdulePol.ScheduleRunTimes.Clear()
    [DATETIME]$Time = $Time
    $Time=$Time.ToUniversalTime()
    $SchdulePol.ScheduleRunTimes.Add($Time)
    $RetentionPol = Get-AzRecoveryServicesBackupRetentionPolicyObject -WorkloadType $WorkLoadType 
    $RetentionPol.DailySchedule.DurationCountInDays = $Duration
	New-AzRecoveryServicesBackupProtectionPolicy -Name $PolicyName -WorkloadType $WorkLoadType -RetentionPolicy $RetentionPol -SchedulePolicy $SchdulePol
    }

Write-Host "Applying the Policy to the Virtual Machine"
$policy = Get-AzRecoveryServicesBackupProtectionPolicy -Name $PolicyName
try {
	Enable-AzRecoveryServicesBackupProtection -ResourceGroupName $RG -Name $VMName -Policy $policy -ErrorAction SilentlyContinue
	}
catch {
    $message = $_
    Write-Warning "An error occured! $message"
}
$backupcontainer = Get-AzRecoveryServicesBackupContainer -ContainerType  $WorkLoadType -FriendlyName $VMName
$item = Get-AzRecoveryServicesBackupItem -container $backupcontainer -WorkloadType $WorkLoadType
Write-Host "Starting the Back up of Virtual Machine in $RSVault"
try {
	Backup-AzRecoveryServicesBackupItem -Item $item -ErrorAction SilentlyContinue
	}
catch {
    $message = $_
    Write-Warning "An error occured! $message"
}
